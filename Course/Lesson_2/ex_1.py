import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = "2"

import tensorflow as tf
import numpy as np


# Константные тензоры
print('Константные тензоры')

a = tf.constant(1)
print(f'{a}\n')

b = tf.constant(1, shape=(1,1))
print(f'{b}\n')

c = tf.constant([1, 2, 3, 4])
print(f'{c}\n')

d = tf.constant(
    [[1, 2],
    [3, 4],
    [5, 6]],
    dtype=tf.float32
)
print(f'{d}\n')

# Изменение типов данных
print('Изменение типов данных')

e = tf.cast(a, dtype=tf.float32)
print(f'{e}\n')

# Преобразование тензоров в массив Numpy
print('Преобразование тензоров в массив Numpy')

f = c.numpy()
print(f'{f}\n')

# Изменяемые тензоры
print('Изменяемые тензоры')

g = tf.Variable(-1.2)
print(f'{g}\n')

h = tf.Variable(c)
print(f'{h}\n')

# Изменение значений тензоров
print('Изменение значений тензоров')

g.assign(5.5)
print(f'{g}\n')

g.assign_add(1.5) #Сложил данные исходного тензора с данными переданного(при этом исходный тензор меняется)

g.assign_sub(1.5) #Сложил данные исходного тензора с данными переданного(при этом исходный тензор меняется)
print(f'{g}\n')

# Посмотреть размерность тензора
print('Посмотреть размерность тензора')

print(f'{d.shape}\n')

# Индексирование элементов тензора и извлечение срезов
print('Индексирование элементов тензора и извлечение срезов')

print(f'{d[0]}\n')
print(f'{d[0][0]}\n')

print(f'{d[0:2]}\n')

i = tf.Variable(range(5)) + 5 #создает тензор [0,1,2,3,4] и прибавляет потом к каждому значению 5
print(f'{i}\n')
print(f'{tf.gather(i, [0, 4])}\n') #функция для выборки значений
# print(f'{i[0, 4]}\n') #такая попытка выдаст ошибку, так как подумает что обращаемся к первой строчке и 4 столбцу!!!!

print(f'{d[:, 1]}\n') #получим вторые значения из каждой строчки

# Изменение формы тензора
print('Изменение формы тензора')

j = tf.Variable(range(30))
print(f'{j}\n')
k = tf.reshape(j, [5, 6]) #Размерность должна подходить для общего количества элементов
print(f'{k}\n')

# Транспонирование тензора
print('Транспонирование тензора')

print(f'{tf.transpose(k, perm=[1, 0])}\n')
